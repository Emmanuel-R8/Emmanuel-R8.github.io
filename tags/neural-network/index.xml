<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Neural Network on Back2Numbers</title>
    <link>/tags/neural-network.html</link>
    <description>Recent content in Neural Network on Back2Numbers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/neural-network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RNN Compressive Memory Part 3: The Compression algorithm</title>
      <link>/2020/12/31/rnn-compressive-memory-part-3-the-compression-algorithm.html</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/31/rnn-compressive-memory-part-3-the-compression-algorithm.html</guid>
      <description>This is part 3 of a discussion of the DeepMind paper about Compressive Transformers for Long-Range Sequence Modelling.
 Part 1: A high level introduction to Compressive Memory mechanics starting from basic RNNS;
 Part 2 (here): a detailed explanation of the TransformerXL;
 Part 3: an implementation using PyTorch;
 Part 4: finally, its application to time series.
  This post describes the building blocks up to what makes a TransformerXL model as presented in June 2019.</description>
    </item>
    
    <item>
      <title>RNN Compressive Memory Part 2: The TransformerXL</title>
      <link>/2020/12/30/rnn-compressive-memory-part-2-the-transformerxl.html</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/30/rnn-compressive-memory-part-2-the-transformerxl.html</guid>
      <description>This is part 2 of a discussion of the DeepMind paper about Compressive Transformers for Long-Range Sequence Modelling.
 Part 1: A high level introduction to Compressive Memory mechanics starting from basic RNNS;
 Part 2 (here): more details about the TransformerXL;
 Part 3: an implementation using PyTorch (soon);
 Part 4: finally, its application to time series (soon).
  This post describes the building blocks up to what makes a TransformerXL model as presented in June 2019.</description>
    </item>
    
    <item>
      <title>RNN Compressive Memory Part 1: A high level introduction.</title>
      <link>/2020/03/07/rnn-compressive-memory-part-1.html</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/07/rnn-compressive-memory-part-1.html</guid>
      <description>This is the first post of series dedicated to Compressive Memory of Recurrent Neural Networks. This is inspired by a recent DeepMind paper published in November 2019 on Arxiv.
Currently, the ambition of the series is to follow this plan:
 Part 1 (here): A high level introduction to Compressive Memory mechanics starting from basic RNNS;
 Part 2: a detailed explanation of the TransformerXL;
 Part 3: an implementation using PyTorch (soon);</description>
    </item>
    
    <item>
      <title>Quick Thought: Universal translator and same language translator</title>
      <link>/2019/10/25/quick-idea-universal-translator-and-same-language-translator.html</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/25/quick-idea-universal-translator-and-same-language-translator.html</guid>
      <description>Quick Thoughts are random thoughts looking for comments
 Let’s imagine a universal translator able to translate any language to any language. Sourcing a corpus of pair translation is a major hurdle. However there is an almost infinite corpus of pair translations: a language with itself; translating English to English is easy, even for a computer.
Let’s give the blackbox universal translator three inputs: a source text, the language of the source text, the language of the desired translation.</description>
    </item>
    
    <item>
      <title>Neural Network - Incremental Growth </title>
      <link>/2019/10/23/neural-network-incremental-growth.html</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/23/neural-network-incremental-growth.html</guid>
      <description>|  | DRAFT 1  | This post is first and foremost asking for assistance. Is anything blatantly incorrect? If not, can anybody point to existing articles/posts/litterature?
We all have laptops. But le’ts face it, even in times of 32GB of RAM and NVMe2 drives, forget about running any interesting TensorFlow model. You need to get an external GPU, build your own rig, or very quickly pay a small fortune for cloud instances.</description>
    </item>
    
  </channel>
</rss>